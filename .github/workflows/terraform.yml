name: terraform

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: false
      concurrency:
        type: string
        required: true
      working-directory:
        type: string
        required: true
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

permissions:
  contents: read  # This is required for actions/checkout
  id-token: write # This is required for requesting the JWT

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency: ${{ inputs.concurrency }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.7'
      - name: Setup tflint
        if: github.event_name == 'pull_request'
        uses: terraform-linters/setup-tflint@v1
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform init
      - name: tflint
        if: github.event_name == 'pull_request'
        run: |
          tflint
      - name: Terraform validate & format
        if: github.event_name == 'pull_request'
        run: |
          terraform validate
          terraform fmt -check -recursive -diff
      - name: Trivy scan
        if: github.event_name == 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ${{ inputs.working-directory }}
          hide-progress: false
          format: github
          exit-code: '1'

      - name: Terraform plan
        env:
          TF_VAR_repo: ${{ github.repositoryUrl }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform plan ${{ github.event_name == 'pull_request' && '' || '-out=planfile' }}
      - name: Terraform apply
        if: github.event_name == 'push'
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform apply "planfile"
